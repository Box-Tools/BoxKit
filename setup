#!/usr/bin/env python3

"""Setup CLI script"""

import os
import subprocess
import click
from distutils.sysconfig import get_python_version


@click.group(name="setup")
def setup():
    """Setup toolkit for BubbleBox"""


@setup.command(name="boost")
def boost():
    """Build local Boost library from submodules"""
    subprocess.run(
        "git submodule update --init --recursive submodules/boost",
        shell=True,
        check=True,
    )

    subprocess.run(
        "cd submodules/boost && ./bootstrap.sh"
        + " "
        + f"--with-python-version={get_python_version()}"
        + " "
        + f"--prefix={os.getenv('PWD')}/bubblebox/depends/boost && ./b2 install",
        shell=True,
        check=True,
    )

    subprocess.run(
        "git submodule deinit submodules/boost",
        shell=True,
        check=True,
    )


@setup.command(name="develop")
def develop():
    """Development mode"""
    subprocess.run("python3 setup.py develop --user", shell=True, check=True)


@setup.command(name="install")
def install():
    """Installation command"""
    subprocess.run("python3 setup.py develop --user", shell=True, check=True)
    subprocess.run("python3 setup.py build", shell=True, check=True)
    subprocess.run("python3 setup.py install --user", shell=True, check=True)


@setup.command(name="publish")
def publish():
    """Publish PyPi package"""
    subprocess.run("python3 setup.py sdist", shell=True, check=True)
    subprocess.run("twine upload dist/*", shell=True, check=True)


@setup.command(name="clean")
def clean():
    """Clean installation artifacts"""
    subprocess.run("rm -rf *.egg-info build dist", shell=True, check=True)
    subprocess.run(
        "cd bubblebox/cbox/source && make clean && cd ../../../", shell=True, check=True
    )


if __name__ == "__main__":
    setup()
